
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CONJ CORKSCREW DISJ DOT ID LPAREN RPARENprogram : decl_seqdecl_seq\t: decl\n                | decl decl_seqdecl : head CORKSCREW body DOT\n            | head DOThead : atomatom : ID\n            | ID atom_seqatom_paren   : LPAREN atom_paren RPAREN\n                    | LPAREN atom RPARENatom_simple : IDatom_seq : atom_simple\n                | atom_paren\n                | atom_simple atom_seq\n                | atom_paren atom_seqbody : expr_disjexpr_disj \t: expr_conj DISJ expr_disj\n                    | expr_conjexpr_conj \t: expr_paren CONJ expr_conj\n                    | expr_parenexpr_paren \t: atom\n                    | LPAREN expr_disj RPAREN'
    
_lr_action_items = {'ID':([0,3,6,8,9,10,12,13,14,20,25,26,27,29,30,],[6,6,10,6,-5,-11,10,10,6,6,-4,6,6,-9,-10,]),'$end':([1,2,3,7,9,25,],[0,-1,-2,-3,-5,-4,]),'CORKSCREW':([4,5,6,10,11,12,13,21,22,29,30,],[8,-6,-7,-11,-8,-12,-13,-14,-15,-9,-10,]),'DOT':([4,5,6,10,11,12,13,15,16,17,18,19,21,22,29,30,31,32,33,],[9,-6,-7,-11,-8,-12,-13,25,-16,-18,-20,-21,-14,-15,-9,-10,-17,-19,-22,]),'CONJ':([6,10,11,12,13,18,19,21,22,29,30,33,],[-7,-11,-8,-12,-13,27,-21,-14,-15,-9,-10,-22,]),'DISJ':([6,10,11,12,13,17,18,19,21,22,29,30,32,33,],[-7,-11,-8,-12,-13,26,-20,-21,-14,-15,-9,-10,-19,-22,]),'RPAREN':([6,10,11,12,13,17,18,19,21,22,23,24,28,29,30,31,32,33,],[-7,-11,-8,-12,-13,-18,-20,-21,-14,-15,29,30,33,-9,-10,-17,-19,-22,]),'LPAREN':([6,8,10,12,13,14,20,26,27,29,30,],[14,20,-11,14,14,14,20,20,20,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'decl_seq':([0,3,],[2,7,]),'decl':([0,3,],[3,3,]),'head':([0,3,],[4,4,]),'atom':([0,3,8,14,20,26,27,],[5,5,19,24,19,19,19,]),'atom_seq':([6,12,13,],[11,21,22,]),'atom_simple':([6,12,13,],[12,12,12,]),'atom_paren':([6,12,13,14,],[13,13,13,23,]),'body':([8,],[15,]),'expr_disj':([8,20,26,],[16,28,31,]),'expr_conj':([8,20,26,27,],[17,17,17,32,]),'expr_paren':([8,20,26,27,],[18,18,18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> decl_seq','program',1,'p_program','parser.py',11),
  ('decl_seq -> decl','decl_seq',1,'p_decl_seq','parser.py',17),
  ('decl_seq -> decl decl_seq','decl_seq',2,'p_decl_seq','parser.py',18),
  ('decl -> head CORKSCREW body DOT','decl',4,'p_decl','parser.py',26),
  ('decl -> head DOT','decl',2,'p_decl','parser.py',27),
  ('head -> atom','head',1,'p_head','parser.py',35),
  ('atom -> ID','atom',1,'p_atom','parser.py',40),
  ('atom -> ID atom_seq','atom',2,'p_atom','parser.py',41),
  ('atom_paren -> LPAREN atom_paren RPAREN','atom_paren',3,'p_atom_paren','parser.py',49),
  ('atom_paren -> LPAREN atom RPAREN','atom_paren',3,'p_atom_paren','parser.py',50),
  ('atom_simple -> ID','atom_simple',1,'p_atom_simple','parser.py',55),
  ('atom_seq -> atom_simple','atom_seq',1,'p_atom_seq','parser.py',60),
  ('atom_seq -> atom_paren','atom_seq',1,'p_atom_seq','parser.py',61),
  ('atom_seq -> atom_simple atom_seq','atom_seq',2,'p_atom_seq','parser.py',62),
  ('atom_seq -> atom_paren atom_seq','atom_seq',2,'p_atom_seq','parser.py',63),
  ('body -> expr_disj','body',1,'p_body','parser.py',71),
  ('expr_disj -> expr_conj DISJ expr_disj','expr_disj',3,'p_expr_disj','parser.py',76),
  ('expr_disj -> expr_conj','expr_disj',1,'p_expr_disj','parser.py',77),
  ('expr_conj -> expr_paren CONJ expr_conj','expr_conj',3,'p_expr_conj','parser.py',85),
  ('expr_conj -> expr_paren','expr_conj',1,'p_expr_conj','parser.py',86),
  ('expr_paren -> atom','expr_paren',1,'p_expr_paren','parser.py',94),
  ('expr_paren -> LPAREN expr_disj RPAREN','expr_paren',3,'p_expr_paren','parser.py',95),
]
